import 'package:flutter/material.dart';

void main() {
  runApp(CurrencyConverterApp());
}

class CurrencyConverterApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      title: 'Currency Converter',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: CurrencyConverterScreen(),
    );
  }
}

class CurrencyConverterScreen extends StatefulWidget {
  @override
  _CurrencyConverterScreenState createState() =>
      _CurrencyConverterScreenState();
}

class _CurrencyConverterScreenState extends State<CurrencyConverterScreen> {
  final TextEditingController _amountController = TextEditingController();
  String _convertedValue = '';
  String _selectedCurrency = 'EUR';
  final Map<String, double> _exchangeRates = {
    'EUR': 0.85,   //  EUR
    'LBP': 90000.0, //  Lebanese Lira
    'SYP': 12500.0, // Syrian Pound
    'PP': 3.6,     //  Palestinian Pound
    'INR': 75.0,   //  Indian Rupee
    'JPY': 110.0,  // Japanese Yen
  };

  void _convertCurrency() {
    final String input = _amountController.text;
    if (input.isEmpty) {
      setState(() {
        _convertedValue = 'Please enter an amount';
      });
      return;
    }

    final double amount = double.tryParse(input) ?? 0;
    if (amount <= 0) {
      setState(() {
        _convertedValue = 'Invalid amount entered';
      });
      return;
    }

    final double rate = _exchangeRates[_selectedCurrency]!;
    final double convertedAmount = amount * rate;

    setState(() {
      _convertedValue =
      '$amount USD = ${convertedAmount.toStringAsFixed(2)} $_selectedCurrency';
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Currency Converter'),backgroundColor: Colors.cyan,
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.stretch,
          children: [
            TextField(
              controller: _amountController,
              keyboardType: TextInputType.number,
              decoration: InputDecoration(
                labelText: 'Enter amount in USD',
                border: OutlineInputBorder(),
              ),
            ),
            SizedBox(height: 16.0),
            DropdownButton<String>(
              value: _selectedCurrency,
              isExpanded: true,
              onChanged: (String? newValue) {
                setState(() {
                  _selectedCurrency = newValue!;
                });
              },
              items: _exchangeRates.keys.map<DropdownMenuItem<String>>(
                    (String value) {
                  return DropdownMenuItem<String>(
                    value: value,
                    child: Text(value),
                  );
                },
              ).toList(),
            ),
            SizedBox(height: 16.0),
            ElevatedButton(
              onPressed: _convertCurrency,
              child: Text('Convert'),
            ),
            SizedBox(height: 16.0),
            Text(
              _convertedValue,
              style: TextStyle(fontSize: 18.0, fontWeight: FontWeight.bold),
              textAlign: TextAlign.center,
            ),
          ],
        ),
      ),
    );
  }
}
